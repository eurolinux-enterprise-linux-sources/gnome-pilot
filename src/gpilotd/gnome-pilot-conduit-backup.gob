/* gnome-pilot-conduit-backup.gob
 * Copyright (C) 1999-2001 Free Software Foundation
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the
 * Free Software Foundation, Inc., 59 Temple Place - Suite 330,
 * Boston, MA 02111-1307, USA.
 *
 * Authors: Eskil Heyn Olsen
 *          Johnathan Blandford
 *
 */

%h{
#include <gnome.h>
#include "gnome-pilot-conduit.h"
#include "gnome-pilot-conduit-file.h"
#include "gnome-pilot-dbinfo.h"

typedef gint (*GnomePilotConduitBackupRestore) (gchar *filename, gint, gint, gpointer data);	

%}

%{
#include <gnome.h>
#include "gnome-pilot-conduit-backup.h"
#include "gnome-pilot-conduit-backup-private.h"
#include <sys/stat.h>
#include <unistd.h>
#include <sys/types.h>
#include <utime.h>
#include <pi-file.h>
%}

class Gnome:Pilot:Conduit:Backup from Gnome:Pilot:Conduit {
        protected GPilotPilot *pilot;
	argument POINTER (type GPilot:Pilot*) pilot
	get {
		ARG = self->pilot;
	}
	set {
		self->pilot = ARG;
	};

	public GtkObject*
	new (GPilotPilot *pilot) {
		GnomePilotConduitBackup *ret = SELF (gtk_object_new (TYPE_SELF, 
								     "GnomePilotConduit::pilot", pilot, 
								     NULL));
		return GTK_OBJECT (ret);
	}

	/* return 0 for ok, < 0 for failure, > 0 for ok, but special case (like db not modified) */
	signal INT (POINTER)
	int backup (self, GnomePilotDBInfo *dbinfo (check null));

	/* return 0 for ok, < 0 for failure, > 0 for ok, but special case (like db not modified) */
	signal INT (INT, POINTER, POINTER, POINTER)
	int restore (self, int pisock, char *directory, 
		     GnomePilotConduitBackupRestore func,
		     gpointer func_data);
}


